apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0'

ext{
	/** spring的4.x版本，面向servlet3.0 */
	springVersion = '4.2.1.RELEASE'
	
	/** mybatis版本*/
	mybatisVersion = '3.3.0'
}

repositories {
    mavenCentral()
}

dependencies {
  	
  	/** servlet3.0的api */
  	compile 'javax.servlet:javax.servlet-api:3.1.0'
  	//compile 'javax.servlet:jsp-api:2.0'
  	
  	/** spring web mvc */
  	compile "org.springframework:spring-web:$springVersion"
  	compile "org.springframework:spring-webmvc:$springVersion"

	/** freemarker */
  	compile 'org.freemarker:freemarker:2.3.23'
  	compile "org.springframework:spring-context-support:$springVersion"
  	
  	/** 连接池 */
  	compile 'com.mchange:c3p0:0.9.5.1'
  	
  	/** MyBatis */
  	compile "org.mybatis:mybatis:$mybatisVersion"
  	compile 'org.mybatis:mybatis-spring:1.2.3'
  	
  	/** spring连接管理 */
  	compile "org.springframework:spring-jdbc:$springVersion"
  	
  	/** mysql驱动 */
  	compile 'mysql:mysql-connector-java:5.1.36'
  	
  	/** 单元测试 */
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.springframework:spring-test:$springVersion"
}

/** 解压war文件，tomcat部署此文件夹路径，不使用war。原因是因为不能刷新war中的页面文件，如果刷新war，tomcat就会重新部署，影响调试页面布局时间 */
task buildWebAppDir(type: Copy) { 
	 from zipTree('build/libs/Dweb-1.0.war')
	 into 'build/libs/Dweb-1.0/'
 }

/** 解压之前先clean和build，clean必须在build之前执行 */
buildWebAppDir.dependsOn clean
buildWebAppDir.dependsOn assemble
assemble.mustRunAfter clean 

/** 刷新tomcat部署文件夹路径中的页面文件,tomcat不会重新部署 */
task buildView(type: Copy) { 
	 from 'src/main/webapp/'
	 into 'build/libs/Dweb-1.0/'
	 exclude { details -> details.file.name.endsWith('.xml')}
 }

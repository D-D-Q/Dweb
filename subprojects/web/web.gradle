apply plugin: 'war'

dependencies {
	
	compile project(':core')
	compile project(':extend')
	
	/** servlet3.0的api */
  	compile 'javax.servlet:javax.servlet-api:3.1.0'
  	//compile 'javax.servlet:jsp-api:2.0'
  	
  	/** spring web mvc */
  	compile "org.springframework:spring-web:$springVersion"
  	compile "org.springframework:spring-webmvc:$springVersion"
  	
	/** freemarker */
  	compile 'org.freemarker:freemarker:2.3.23'
  	compile "org.springframework:spring-context-support:$springVersion"
  	
  	/** spring web mvc 测试包 */
  	testCompile "org.springframework:spring-test:$springVersion"
}

/** 解压war文件，tomcat部署此文件夹路径，不使用war。原因是因为不能刷新war中的页面文件，如果刷新war，tomcat就会重新部署，影响调试页面布局时间 */
task buildWebAppDir(type: Copy) { 
	 from zipTree('build/libs/web.war')
	 into 'build/libs/web/'
 }

/** 解压之前先clean和build，clean必须在build之前执行 */
buildWebAppDir.dependsOn clean
buildWebAppDir.dependsOn assemble
assemble.mustRunAfter clean 

/** 刷新tomcat部署文件夹路径中的页面文件,tomcat不会重新部署 */
task buildView(type: Copy) { 
	 from 'src/main/webapp/'
	 into 'build/libs/web/'
	 exclude { details -> details.file.name.endsWith('.xml')}
}